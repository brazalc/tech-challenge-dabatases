name: Deploy to EKS
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1
      - name: Install and configure kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          kubectl version --client
          aws eks --region ${{secrets.AWS_REGION}} update-kubeconfig --name ${{secrets.EKS_CLUSTER_NAME}}
          aws --version
      - name: Deploy to EKS
        run: |
          aws eks --region ${{secrets.AWS_REGION}} update-kubeconfig --name ${{secrets.EKS_CLUSTER_NAME}}
          TOKEN=$(aws eks get-token --cluster-name ${{secrets.EKS_CLUSTER_NAME}} --region ${{secrets.AWS_REGION}} --output json | jq -r '.status.token')
          kubectl config set-credentials ${{secrets.USERNAME}} --token=$TOKEN
          cd infrastructure
          kubectl apply -f database-pedido/postgres-configmap-1.yaml
          kubectl apply -f database-pedido/postgres-pvc-pv-2.yaml
          kubectl apply -f database-pedido/postgres-deployment-3.yaml
          kubectl apply -f database-pedido/postgres-service-4.yaml
          kubectl apply -f database-pagamento/postgres-configmap-1.yaml
          kubectl apply -f database-pagamento/postgres-pvc-pv-2.yaml
          kubectl apply -f database-pagamento/postgres-deployment-3.yaml
          kubectl apply -f database-pagamento/postgres-service-4.yaml
          kubectl apply -f database-produto/postgres-configmap-1.yaml
          kubectl apply -f database-produto/postgres-pvc-pv-2.yaml
          kubectl apply -f database-produto/postgres-deployment-3.yaml
          kubectl apply -f database-produto/postgres-service-4.yaml
